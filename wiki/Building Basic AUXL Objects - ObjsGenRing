AUXL Engine v0.2 : Web XR Scenario, Object Generator Engine & Universal Controller System 
---
Wiki Sections

- [Home](https://github.com/Minty-Crisp/AUXL/wiki)

- [System Overview](https://github.com/Minty-Crisp/AUXL/wiki/System-Overview)

- Quick Start Guide

- [Customizing AUXL Controls](https://github.com/Minty-Crisp/AUXL/wiki/Customizing-AUXL-Controls)

Building AUXL Scenarios, Zones and Scenes
- [Instructions](https://github.com/Minty-Crisp/AUXL/wiki/Building-AUXL-Scenarios,-Zones-and-Scenes-:-Instructions)
- [Scenario](https://github.com/Minty-Crisp/AUXL/wiki/Building-AUXL-Scenarios,-Zones-and-Scenes-:-Scenario)
- [Zone](https://github.com/Minty-Crisp/AUXL/wiki/Building-AUXL-Scenarios,-Zones-and-Scenes-:-Zone)
- [Scene](https://github.com/Minty-Crisp/AUXL/wiki/Building-AUXL-Scenarios,-Zones-and-Scenes-:-Scene)

Building Basic AUXL Objects
- [Core](https://github.com/Minty-Crisp/AUXL/wiki/Building-Basic-AUXL-Objects-:-Core)
- [Layer](https://github.com/Minty-Crisp/AUXL/wiki/Building-Basic-AUXL-Objects-:-Layer)
- ObjsGenRing (Here)
- [MultiAssetGen](https://github.com/Minty-Crisp/AUXL/wiki/Building-Basic-AUXL-Objects-:-MultiAssetGen)
- [Horizon](https://github.com/Minty-Crisp/AUXL/wiki/Building-Basic-AUXL-Objects-:-Horizon)
- [SkyBox](https://github.com/Minty-Crisp/AUXL/wiki/Building-Basic-AUXL-Objects-:-SkyBox)
- [Teleport](https://github.com/Minty-Crisp/AUXL/wiki/Building-Basic-AUXL-Objects-:-Teleport)
- [ImageSwapper](https://github.com/Minty-Crisp/AUXL/wiki/Building-Basic-AUXL-Objects-:-ImageSwapper)
- [ImageCarousel](https://github.com/Minty-Crisp/AUXL/wiki/Building-Basic-AUXL-Objects-:-ImageCarousel)

Building Advanced AUXL Objects
- [NPC w/ Book](https://github.com/Minty-Crisp/AUXL/wiki/Building-Advanced-AUXL-Objects-:-NPC-w--Book)
- [Menu](https://github.com/Minty-Crisp/AUXL/wiki/Building-Advanced-AUXL-Objects-:-Menu)
- [MemoryGame](https://github.com/Minty-Crisp/AUXL/wiki/Building-Advanced-AUXL-Objects-:-MemoryGame)

Using Special AUXL Objects
- [Player](https://github.com/Minty-Crisp/AUXL/wiki/Using-Special-AUXL-Objects-:-Player)
- [HamMenu](https://github.com/Minty-Crisp/AUXL/wiki/Using-Special-AUXL-Objects-:-HamMenu)

---
Building Basic AUXL Objects : ObjsGenRing
---
Using a single Core Data, customize a set of randomizations that generate multiple versions of that same object within a ringed radius spawning area.
---
Defining a ObjsGenRing Data & ObjsGenRing Object :
---
An ObjsGenRing is built up of a single Core Data set which does not need to be generated. You then customize the various parameters to build however many objects you define with a set of randomized limitations.

	auxl.exampleObjRingData = {
		id: 'exampleObjRing',
		objData: auxl.exampleNameData,
		total: 30,
		outerRingRadius: 30,
		innerRingRadius: 3,
		sameTypeRadius: 2,
		ranYPos: true,
		yPosFlex: 2,
		ranScaleX: true,
		ranScaleY: true,
		ranScaleZ: true,
		scaleFlex: 3,
		ranRotX: true,
		ranRotY: true,
		ranRotZ: true,
		ranColor: true,
		ranTexture: true,
	};
	auxl.exampleObjRing = auxl.ObjsGenRing(auxl.exampleObjRingData);

The example above uses the base Core Data from exampleNameData to generate 30 versions of that object spawned anywhere between 2 and 30 meters from the center of the scene while keeping a minimum distance between each object of 2 meters to avoid overlapping. It also randomizes the object's Y position from the base data anywhere from it's current Y position up to 2 meters above. Each object also has randomized scaling on each X, Y and Z anywhere from it's current scale up to an additional 3 added to each scale. Each object will also randomly rotate on each X, Y and Z axis. Additionally the object can accept a material (a primitive or no material obj file), so we can randomize the color it will display as well as the texture which loads from an array of 80 various Kenny created textures.

Each paramter description :

- id : Name must match named ObjsGenRing object generated
- objData : Name must use a Core's Data and not a Core itself

- total : The amount of objects to generate

- outerRingRadius : Outer radius of spawn area.
- innerRingRadius : Inner radius of spawn area.

- sameTypeRadius : Minimum spawning distance between each object.

- ranYPos : Allow Y position randomizations?
- yPosFlex : The amount of Y position that can be adjusted between.

- ranScaleX : Allow X scale randomizations?
- ranScaleY : Allow Y scale randomizations?
- ranScaleZ : Allow Z scale randomizations?
- scaleFlex : The amount of enabled X, Y and/or Z scale that can be adjusted between.

- ranRotX : Allow X rotation randomizations?
- ranRotY : Allow Y rotation randomizations?
- ranRotZ : Allow Z rotation randomizations?

- ranColor : Allow material color randomizations?
- ranTexture : Allow material source randomizations?
---
ObjsGenRing Methods :
---

SpawnObjRing
---
- Spawns the ObjsGenRing into the environment. When spawning via a Scenario, Zone, Scene or Book it is added to that respective instruction tracker.

It does not accept any parameters.

SpawnObjRing()

	exampleObjRing:{SpawnObjRing:null},
- - -

DespawnObjRing
---
- Despawns the ObjsGenRing from the environment. When removing via a Scenario, Zone, Scene or Book it is also removed from that respective instruction tracker.

It does not accept any parameters.

DespawnObjRing()

	exampleObjRing:{DespawnObjRing:null},
- - -